name: publish-to-ecr
on: [push]
env:
  BUCKET_NAME : ${{ secrets.EKS_BUCKET_NAME }}
  AWS_REGION : ${{ secrets.AWS_REGION }}
# permission can be added at job level or workflow level
permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        python-version: ${{ matrix.python-version }}
        role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
        role-session-name: samplerolesession
        aws-region: ${{ env.AWS_REGION }}

    - name: login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: create wheel file from source code
      run: |
        cd downstream_model
        cd yolo
        pip install wheel
        python setup.py bdist_wheel --version v0.0.1
    - name: build, tag, and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
      run: |
        # Build a docker container and push it to ECR
        echo "building version v0.0.11 ..."
        cd downstream_model
        cd yolo
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:v0.0.11 .
        echo "pushing image to ECR ..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:v0.0.11
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:v0.0.11"
#    - name: create wheel file from source code
#      run: python setup.py bdist_wheel