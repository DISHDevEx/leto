#GitHub workflow to deploy the Leto - Reduction modules in the target AWS EC2 instance
#Version: v1.0.0
#
name: deploy-reduction-modules-in-ec2

on:
  workflow_dispatch:
    #Inputs for workflow
    inputs:
      module:
        # Description to be shown in the UI
        description: Reduction module
        #Input selection is mandatory
        required: true
        type: choice
        options:
          - Select module name
          - cv2_jpg_reduction
          - ffmpeg_resolution_downsampler
          - fps_bitrate
env:
  AWS_REGION : ${{ secrets.AWS_REGION }}
#Permission for fetching an OpenId Connect (OIDC) token
permissions:
    id-token: write

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
       role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
       role-session-name: ${{ secrets.SAMPLE_ROLE_SESSION }}
       aws-region: ${{ env.AWS_REGION }}

    #Deploy cv2_jpg_reduction module in target AWS EC2 instance
    - name: Deploy cv2_jpg_reduction module in EC2 instance
      if: github.event.inputs.module == 'cv2_jpg_reduction'
      run: |
        #Install 'expect-dev' package to use 'unbuffer' command with ssm and give permission to the ssm-user directory
        sudo apt-get -y install expect-dev
        unbuffer aws ssm start-session \
        --document-name 'AWS-StartNonInteractiveCommand' \
        --parameters '{"command": ["sudo chown -R $USER /home/ssm-user"]}' \
        --target ${{ secrets.REDUCTION_INSTANCE_ID }}
        #Install 'expect-dev' package to use 'unbuffer' command with ssm and git clone repository into EC2
        unbuffer aws ssm start-session \
        --document-name 'AWS-StartNonInteractiveCommand' \
        --parameters '{"command": ["git clone https://github.com/DISHDevEx/leto.git"]}' \
        --target ${{ secrets.REDUCTION_INSTANCE_ID }}
        # #Install requirements for cv2_jpg_reduction module in EC2 instance
        # unbuffer aws ssm start-session \
        # --document-name 'AWS-StartNonInteractiveCommand' \
        # --parameters '{"command": ["python3 -m pip3 install -r /home/ssm-user/leto/reduction/cv2_jpg_reduction/requirements_cv2_jpg_reduction.txt"]}' \
        # --target ${{ secrets.REDUCTION_INSTANCE_ID }}
        # #The python script related to cv2_jpg_reduction module will be executed in the same EC2 via respective AWS step function